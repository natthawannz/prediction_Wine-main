import streamlit as st
import numpy as np
import joblib

# ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏•‡πÅ‡∏•‡∏∞ scaler
model = joblib.load("./best_wine_quality_model.pkl")
scaler = joblib.load("./scaler.pkl")

# ------------------------- UI Styling -------------------------
st.set_page_config(page_title="Wine Quality Predictor", page_icon="üç∑", layout="centered")

# CSS Styling - ‡πÄ‡∏û‡∏¥‡πà‡∏° Animation, Glow, Confetti/Snow, ‡∏õ‡∏£‡∏±‡∏ö‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á + ‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ñ‡∏ö Header
st.markdown(
    """
    <style>
        /* ‡∏õ‡∏£‡∏±‡∏ö‡∏™‡∏µ‡∏Ç‡∏≠‡∏á‡πÅ‡∏ñ‡∏ö‡πÄ‡∏°‡∏ô‡∏π‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô (Header) */
        [data-testid="stHeader"] {
            background: linear-gradient(to right, #1e1e1e, #3a3a3a) !important;
            color: #fff !important;
            box-shadow: none !important;
            border-bottom: 1px solid #444 !important;
        }

        /* ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏Ç‡∏≠‡∏á App ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô Dark Mode */
        [data-testid="stAppViewContainer"] {
            background: linear-gradient(to right, #1e1e1e, #3a3a3a) !important;
            color: white;
        }
        
        /* ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏™‡∏µ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡∏´‡∏•‡∏±‡∏Å */
        [data-testid="stMarkdownContainer"] {
            color: white;
        }
        
        /* ‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏Å (Glassmorphism) */
        .main {
            background: rgba(30, 30, 30, 0.8);
            padding: 30px;
            border-radius: 15px;
            box-shadow: 0px 5px 20px rgba(0,0,0,0.3);
            backdrop-filter: blur(10px);
            margin-top: 30px;
        }

        /* ‡∏õ‡∏∏‡πà‡∏° Predict - ‡πÄ‡∏û‡∏¥‡πà‡∏° Glow & 3D Hover */
        .stButton>button {
            background: linear-gradient(45deg, #800020, #b22222);
            color: white !important;
            border-radius: 15px;
            padding: 16px 30px;
            font-size: 20px;
            font-weight: bold;
            transition: 0.3s ease-in-out;
            box-shadow: 0px 5px 15px rgba(255, 100, 100, 0.3);
        }
        .stButton>button:hover {
            background: linear-gradient(45deg, #b22222, #ff4747);
            transform: scale(1.08);
            box-shadow: 0px 5px 25px rgba(255, 100, 100, 0.5);
        }

        /* ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡πÉ‡∏´‡∏ç‡πà ‡πÜ */
        h1 {
            text-align: center;
            font-size: 45px;
            font-weight: bold;
            background: linear-gradient(45deg, #ffcccb, #ff7777);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            text-shadow: 2px 2px 10px rgba(255, 255, 255, 0.2);
            margin-bottom: 10px;
        }
        h3 {
            text-align: center;
            font-size: 22px;
            font-weight: 500;
            color: #ff9999;
            margin-top: 0px;
        }
        h2 {
            margin-top: 0px;
        }

        /* ‡∏Å‡∏≤‡∏£‡πå‡∏î‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏• - ‡πÄ‡∏û‡∏¥‡πà‡∏° Animation fade-in + hover scale */
        @keyframes fadeIn {
            0% { opacity: 0; transform: translateY(20px); }
            100% { opacity: 1; transform: translateY(0px); }
        }
        .result-card {
            animation: fadeIn 0.8s ease-in-out forwards;
            background: rgba(50, 50, 50, 0.9);
            padding: 20px;
            border-radius: 15px;
            box-shadow: 0px 5px 20px rgba(255,255,255,0.1);
            text-align: center;
            transition: transform 0.3s, box-shadow 0.3s;
            backdrop-filter: blur(12px);
            margin-top: 20px;
        }
        .result-card:hover {
            transform: scale(1.05);
            box-shadow: 0px 5px 25px rgba(255,255,255,0.2);
        }
    </style>
    """,
    unsafe_allow_html=True
)

# ------------------------- Header -------------------------
st.markdown("<h1>üç∑ Wine Quality Predictor</h1>", unsafe_allow_html=True)
st.markdown("<h3>üîç ‡∏Å‡∏£‡∏≠‡∏Å‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏Ç‡∏≠‡∏á‡πÑ‡∏ß‡∏ô‡πå</h3>", unsafe_allow_html=True)

# ------------------------- Input Fields -------------------------
st.markdown("<h2>üìä ‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏Ç‡∏≠‡∏á‡πÑ‡∏ß‡∏ô‡πå</h2>", unsafe_allow_html=True)
with st.container():
    col1, col2 = st.columns(2)
    
    with col1:
        fixed_acidity = st.number_input("Fixed Acidity (‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏£‡∏î‡∏Ñ‡∏á‡∏ó‡∏µ‡πà)", min_value=0.0, step=0.1)
        volatile_acidity = st.number_input("Volatile Acidity (‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏£‡∏î‡∏£‡∏∞‡πÄ‡∏´‡∏¢)", min_value=0.0, step=0.01)
        citric_acid = st.number_input("Citric Acid (‡∏Å‡∏£‡∏î‡∏ã‡∏¥‡∏ï‡∏£‡∏¥‡∏Å)", min_value=0.0, step=0.01)
        residual_sugar = st.number_input("Residual Sugar (‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•‡∏ï‡∏Å‡∏Ñ‡πâ‡∏≤‡∏á)", min_value=0.0, step=0.1)
        chlorides = st.number_input("Chloride (‡∏Ñ‡∏•‡∏≠‡πÑ‡∏£‡∏î‡πå)", min_value=0.0, step=0.001)
        free_sulfur_dioxide = st.number_input("Free Sulfur Dioxide (‡∏ã‡∏±‡∏•‡πÄ‡∏ü‡∏≠‡∏£‡πå‡πÑ‡∏î‡∏≠‡∏≠‡∏Å‡πÑ‡∏ã‡∏î‡πå‡∏ü‡∏£‡∏µ)", min_value=0.0, step=1.0)

    with col2:
        total_sulfur_dioxide = st.number_input("Total Sulfur Dioxide (‡∏ã‡∏±‡∏•‡πÄ‡∏ü‡∏≠‡∏£‡πå‡πÑ‡∏î‡∏≠‡∏≠‡∏Å‡πÑ‡∏ã‡∏î‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î)", min_value=0.0, step=1.0)
        density = st.number_input("Density (‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏ô‡∏≤‡πÅ‡∏ô‡πà‡∏ô)", min_value=0.0, step=0.0001)
        pH = st.number_input("pH (‡∏Ñ‡πà‡∏≤ pH)", min_value=0.0, step=0.01)
        sulphates = st.number_input("Sulphates (‡∏ã‡∏±‡∏•‡πÄ‡∏ü‡∏ï)", min_value=0.0, step=0.01)
        alcohol = st.number_input("Alcohol (‡πÅ‡∏≠‡∏•‡∏Å‡∏≠‡∏Æ‡∏≠‡∏•‡πå)", min_value=0.0, step=0.1)

# ------------------------- Predict Button -------------------------
st.markdown("<br>", unsafe_allow_html=True)  # ‡πÄ‡∏ß‡πâ‡∏ô‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡πÉ‡∏´‡πâ UI ‡∏î‡∏π‡πÑ‡∏°‡πà‡πÅ‡∏ô‡πà‡∏ô‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ
if st.button("üîÆ Predict Wine Quality"):
    # ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏°‡πÄ‡∏î‡∏•
    input_data = np.array([[fixed_acidity, volatile_acidity, citric_acid, residual_sugar, chlorides,
                            free_sulfur_dioxide, total_sulfur_dioxide, density, pH, sulphates, alcohol]])
    input_scaled = scaler.transform(input_data)
    
    # ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢
    prediction = model.predict(input_scaled)[0]
    probability = model.predict_proba(input_scaled)[0]
    
    # ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û (1-10)
    quality_score = int(probability[1] * 10)

    # ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏•‡∏∞‡∏™‡∏µ
    if prediction == 1:
        result_text = f"üç∑ <b>‡πÑ‡∏ß‡∏ô‡πå‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏™‡∏π‡∏á!</b> (‡∏£‡∏∞‡∏î‡∏±‡∏ö: {quality_score}/10)"
        result_color = "#90EE90"
        st.balloons()  # ‡πÅ‡∏™‡∏î‡∏á‡∏•‡∏π‡∏Å‡πÇ‡∏õ‡πà‡∏á‡∏ñ‡πâ‡∏≤‡πÑ‡∏ß‡∏ô‡πå‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏™‡∏π‡∏á
    else:
        result_text = f"‚ö†Ô∏è <b>‡πÑ‡∏ß‡∏ô‡πå‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏ï‡πà‡∏≥</b> (‡∏£‡∏∞‡∏î‡∏±‡∏ö: {10 - quality_score}/10)"
        result_color = "#ff6666"
        st.snow()      # ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏¥‡∏°‡∏∞‡πÄ‡∏≠‡∏ü‡πÄ‡∏ü‡∏Å‡∏ï‡πå‡∏ñ‡πâ‡∏≤‡πÑ‡∏ß‡∏ô‡πå‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏ï‡πà‡∏≥

    # ------------------------- Show Result -------------------------
    st.markdown(
        f"""
        <div class='result-card'>
            <h2 style='color: {result_color};'>{result_text}</h2>
        </div>
        """,
        unsafe_allow_html=True
    )
